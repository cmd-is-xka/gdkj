{"uid":"85c1aa6face2b76","name":"test_name_name[None]","fullName":"gdkjtestpro.test_textToVideo.TestAllTestName#test_name_name","historyId":"d39b44bfc5c739ed6d50ed1633410685","time":{"start":1752632552282,"stop":1752632553106,"duration":824},"status":"failed","statusMessage":"AssertionError: assert 40001 == 0","statusTrace":"self = <test_textToVideo.TestAllTestName object at 0x7f203373d180>, data = None\n\n    @pytest.mark.parametrize(\"data\", [testdata])\n    def test_name_name(self,data):\n       testcase1 = Name()\n>      testcase1.Assert_testname(data)\n\ngdkjtestpro/test_textToVideo.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_textToVideo.Name object at 0x7f20335bd870>, data = None\n\n    def Assert_testname(self,data):\n    \n       token = Name().read_json('gdkjtestpro/userinfo.json')\n       url = \"https://zhpro.gdcar.net/ai/appComfyUi/sendPrompt\"\n    \n       payload = json.dumps({\"type\":7,\"title\":\"\",\"promptInfo\":{\"Width\":768,\"Height\":768,\"Text\":\"桌子\",\"NumFrames\":89}})\n       headers = {\n       'Content-Type': 'application/json',\n       'Authorization': '%s'%(token)}\n       start_time = time.time()\n       response = requests.request(\"POST\", url, headers=headers, data=payload)\n    \n       assert response.status_code ==200\n    \n       end_time = time.time()\n       response_time = end_time - start_time\n    \n       print('接口响应时间：',response_time)\n    \n       result = json.loads(response.text)\n       code = result['code']\n       print('code:',code)\n       print('data:',result['data'])\n>      assert code == 0\nE      assert 40001 == 0\n\ngdkjtestpro/test_textToVideo.py:46: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"gdkjtestpro"},{"name":"suite","value":"test_textToVideo"},{"name":"subSuite","value":"TestAllTestName"},{"name":"host","value":"pkrvmq0rgcvqdmg"},{"name":"thread","value":"3524-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"gdkjtestpro.test_textToVideo"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"85c1aa6face2b76.json","parameterValues":["None"]}